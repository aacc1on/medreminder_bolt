<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>New Prescription - MediCare</title>
    
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap Icons -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    
    <style>
        :root {
            --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --success-gradient: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
            --warning-gradient: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            --info-gradient: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
            --danger-gradient: linear-gradient(135deg, #ff6b6b 0%, #ee5a52 100%);
            --card-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            --card-shadow-hover: 0 20px 40px rgba(0, 0, 0, 0.15);
            --border-radius: 1.5rem;
            --glass-bg: rgba(255, 255, 255, 0.95);
            --glass-border: rgba(255, 255, 255, 0.2);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            overflow-x: hidden;
            position: relative;
        }

        body::before {
            content: '';
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 320"%3E%3Cpath fill="%23ffffff" fill-opacity="0.1" d="M0,96L48,112C96,128,192,160,288,160C384,160,480,128,576,122.7C672,117,768,139,864,138.7C960,139,1056,117,1152,117.3C1248,117,1344,139,1392,149.3L1440,160L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z"%3E%3C/path%3E%3C/svg%3E') no-repeat bottom;
            background-size: cover;
            pointer-events: none;
            z-index: -1;
        }

        .container {
            position: relative;
            z-index: 1;
        }

        /* Header Styles */
        .page-header {
            background: var(--glass-bg);
            backdrop-filter: blur(20px);
            border-radius: var(--border-radius);
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: var(--card-shadow);
            border: 1px solid var(--glass-border);
            position: relative;
            overflow: hidden;
        }

        .page-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: var(--primary-gradient);
            border-radius: var(--border-radius) var(--border-radius) 0 0;
        }

        .page-title {
            background: var(--primary-gradient);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            font-weight: 700;
            font-size: 2.5rem;
            margin-bottom: 0.5rem;
        }

        .page-subtitle {
            color: #6c757d;
            font-size: 1.1rem;
            font-weight: 500;
        }

        /* Form Card Styles */
        .form-card {
            background: var(--glass-bg);
            backdrop-filter: blur(20px);
            border: 1px solid var(--glass-border);
            border-radius: var(--border-radius);
            box-shadow: var(--card-shadow);
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .form-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: var(--primary-gradient);
            border-radius: var(--border-radius) var(--border-radius) 0 0;
        }

        .form-card:hover {
            transform: translateY(-5px);
            box-shadow: var(--card-shadow-hover);
        }

        /* Form Controls */
        .form-label {
            font-weight: 600;
            color: #2d3748;
            margin-bottom: 0.75rem;
            font-size: 0.95rem;
            position: relative;
        }

        .form-label.required::after {
            content: ' *';
            color: #e53e3e;
            font-weight: bold;
        }

        .form-control, .form-select {
            border: 2px solid #e2e8f0;
            border-radius: 0.75rem;
            padding: 0.875rem 1rem;
            font-size: 0.95rem;
            transition: all 0.3s ease;
            background: rgba(255, 255, 255, 0.8);
            backdrop-filter: blur(10px);
        }

        .form-control:focus, .form-select:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
            background: rgba(255, 255, 255, 0.95);
        }

        .form-control:hover, .form-select:hover {
            border-color: #cbd5e0;
            background: rgba(255, 255, 255, 0.9);
        }

        .form-text {
            color: #718096;
            font-size: 0.85rem;
            margin-top: 0.5rem;
        }

        /* Time Input Enhancement */
        .time-input-group {
            position: relative;
        }

        .time-suggestions {
            position: absolute;
            top: 100%;
            left: 0;
            right: 0;
            background: white;
            border: 1px solid #e2e8f0;
            border-radius: 0.5rem;
            box-shadow: var(--card-shadow);
            z-index: 1000;
            max-height: 200px;
            overflow-y: auto;
            display: none;
        }

        .time-suggestion {
            padding: 0.75rem 1rem;
            cursor: pointer;
            border-bottom: 1px solid #f7fafc;
            transition: background-color 0.2s ease;
        }

        .time-suggestion:hover {
            background-color: #f7fafc;
        }

        .time-suggestion:last-child {
            border-bottom: none;
        }

        /* Medication Suggestions */
        .medication-suggestions {
            position: absolute;
            top: 100%;
            left: 0;
            right: 0;
            background: white;
            border: 1px solid #e2e8f0;
            border-radius: 0.5rem;
            box-shadow: var(--card-shadow);
            z-index: 1000;
            max-height: 200px;
            overflow-y: auto;
            display: none;
        }

        .medication-suggestion {
            padding: 0.75rem 1rem;
            cursor: pointer;
            border-bottom: 1px solid #f7fafc;
            transition: background-color 0.2s ease;
        }

        .medication-suggestion:hover {
            background-color: #f7fafc;
        }

        .medication-suggestion:last-child {
            border-bottom: none;
        }

        /* Button Styles */
        .btn-custom {
            border-radius: 0.75rem;
            padding: 0.875rem 2rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
            position: relative;
            overflow: hidden;
            border: none;
        }

        .btn-custom::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
            transition: 0.5s;
        }

        .btn-custom:hover::before {
            left: 100%;
        }

        .btn-primary-custom {
            background: var(--primary-gradient);
            color: white;
        }

        .btn-primary-custom:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
        }

        .btn-outline-secondary-custom {
            background: transparent;
            border: 2px solid #6c757d;
            color: #6c757d;
        }

        .btn-outline-secondary-custom:hover {
            background: #6c757d;
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(108, 117, 125, 0.4);
        }

        /* Alert Styles */
        .alert-custom {
            border: none;
            border-radius: var(--border-radius);
            padding: 1.5rem;
            box-shadow: var(--card-shadow);
            animation: slideInDown 0.5s ease-out;
            position: relative;
            overflow: hidden;
        }

        .alert-danger-custom {
            background: linear-gradient(135deg, #f8d7da 0%, #f5c6cb 100%);
            border-left: 4px solid #dc3545;
            color: #721c24;
        }

        /* Helper Card */
        .helper-card {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border: 1px solid rgba(0, 0, 0, 0.05);
            border-radius: var(--border-radius);
            box-shadow: var(--card-shadow);
            transition: all 0.3s ease;
        }

        .helper-card:hover {
            transform: translateY(-3px);
            box-shadow: var(--card-shadow-hover);
        }

        .helper-title {
            color: #2d3748;
            font-weight: 600;
            margin-bottom: 1rem;
        }

        .helper-list {
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .helper-list li {
            padding: 0.5rem 0;
            color: #4a5568;
            font-size: 0.9rem;
            display: flex;
            align-items: center;
        }

        .helper-list li i {
            margin-right: 0.75rem;
            font-size: 1rem;
        }

        /* Form Group Animations */
        .form-group {
            position: relative;
            margin-bottom: 1.5rem;
        }

        .form-group.focused .form-label {
            color: #667eea;
            transform: translateY(-2px);
        }

        /* Animations */
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes slideInDown {
            from {
                opacity: 0;
                transform: translateY(-30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .animate-fade-in {
            animation: fadeInUp 0.6s ease-out;
        }

        /* Loading State */
        .btn-loading {
            position: relative;
            color: transparent !important;
        }

        .btn-loading::after {
            content: '';
            position: absolute;
            width: 20px;
            height: 20px;
            top: 50%;
            left: 50%;
            margin-left: -10px;
            margin-top: -10px;
            border: 2px solid #ffffff;
            border-radius: 50%;
            border-top-color: transparent;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            to {
                transform: rotate(360deg);
            }
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .page-title {
                font-size: 2rem;
            }
            
            .page-header {
                padding: 1.5rem;
            }
            
            .form-card {
                margin: 0 1rem;
            }

            .btn-custom {
                width: 100%;
                margin-bottom: 0.5rem;
            }
        }
    </style>
</head>
<body>
    <div class="container py-4">
        <!-- Header -->
        <div class="page-header animate-fade-in">
            <div class="row align-items-center">
                <div class="col">
                    <h1 class="page-title">
                        <i class="bi bi-prescription2 me-3"></i>New Prescription
                    </h1>
                    <p class="page-subtitle">Create a medication schedule for your patient</p>
                </div>
                <div class="col-auto">
                    <a href="/doctor/dashboard" class="btn btn-outline-secondary-custom btn-custom">
                        <i class="bi bi-arrow-left me-2"></i>Back to Dashboard
                    </a>
                </div>
            </div>
        </div>

        <div class="row justify-content-center">
            <div class="col-lg-8">
                <!-- Main Form Card -->
                <div class="form-card animate-fade-in" style="animation-delay: 0.2s">
                    <div class="card-body p-4">
                        <!-- Error Messages -->
                        <% if (errors && errors.length > 0) { %>
                            <div class="alert alert-danger-custom alert-custom mb-4">
                                <h6 class="fw-bold mb-2">
                                    <i class="bi bi-exclamation-triangle me-2"></i>Please fix the following errors:
                                </h6>
                                <% errors.forEach(error => { %>
                                    <div class="mb-1">• <%= error.msg %></div>
                                <% }) %>
                            </div>
                        <% } %>

                        <form action="/doctor/new-prescription" method="POST" id="prescriptionForm">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="patientId" class="form-label required">Select Patient</label>
                                        <select class="form-select" name="patientId" id="patientId" required>
                                            <option value="">Choose a patient...</option>
                                            <% patients.forEach(patient => { %>
                                                <option value="<%= patient._id %>"
                                                         <%= formData.patientId === patient._id.toString() ? 'selected' : '' %>>
                                                    <%= patient.name %> (<%= patient.email %>)
                                                </option>
                                            <% }) %>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="name" class="form-label required">Medication Name</label>
                                        <div class="position-relative">
                                            <input type="text"
                                                    class="form-control"
                                                    id="name"
                                                    name="name"
                                                    value="<%= formData.name || '' %>"
                                                   placeholder="e.g., Ibuprofen, Amoxicillin"
                                                   required
                                                   autocomplete="off">
                                            <div class="medication-suggestions" id="medicationSuggestions"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="dosage" class="form-label required">Dosage</label>
                                        <input type="text"
                                                class="form-control"
                                                id="dosage"
                                                name="dosage"
                                                value="<%= formData.dosage || '' %>"
                                               placeholder="e.g., 400mg, 1 tablet, 5ml"
                                               required>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="timesPerDay" class="form-label required">Times per Day</label>
                                        <div class="time-input-group position-relative">
                                            <input type="text"
                                                    class="form-control"
                                                    id="timesPerDay"
                                                    name="timesPerDay"
                                                    value="<%= formData.timesPerDay || '' %>"
                                                   placeholder="e.g., 09:00, 14:00, 21:00"
                                                   required
                                                   autocomplete="off">
                                            <div class="time-suggestions" id="timeSuggestions"></div>
                                        </div>
                                        <div class="form-text">Enter times separated by commas (24-hour format)</div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="startDate" class="form-label required">Start Date</label>
                                        <input type="date"
                                                class="form-control"
                                                id="startDate"
                                                name="startDate"
                                                value="<%= formData.startDate || '' %>"
                                               required>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="endDate" class="form-label required">End Date</label>
                                        <input type="date"
                                                class="form-control"
                                                id="endDate"
                                                name="endDate"
                                                value="<%= formData.endDate || '' %>"
                                               required>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="instructions" class="form-label">Special Instructions</label>
                                <textarea class="form-control"
                                           id="instructions"
                                           name="instructions"
                                           rows="4"
                                          placeholder="e.g., Take with food, Avoid alcohol, Take on empty stomach, etc."><%= formData.instructions || '' %></textarea>
                            </div>

                            <div class="d-flex gap-3 flex-wrap">
                                <button type="submit" class="btn btn-primary-custom btn-custom" id="submitBtn">
                                    <i class="bi bi-prescription2 me-2"></i>Create Prescription
                                </button>
                                <a href="/doctor/dashboard" class="btn btn-outline-secondary-custom btn-custom">
                                    <i class="bi bi-x-circle me-2"></i>Cancel
                                </a>
                            </div>
                        </form>
                    </div>
                </div>

                <!-- Helper Card -->
                <div class="helper-card animate-fade-in" style="animation-delay: 0.4s">
                    <div class="card-body p-4">
                        <h6 class="helper-title">
                            <i class="bi bi-info-circle text-primary me-2"></i>Prescription Guidelines & Tips
                        </h6>
                        <div class="row">
                            <div class="col-md-6">
                                <ul class="helper-list">
                                    <li>
                                        <i class="bi bi-check2 text-success"></i>
                                        Use specific medication names (generic or brand)
                                    </li>
                                    <li>
                                        <i class="bi bi-check2 text-success"></i>
                                        Include exact dosage amounts and units
                                    </li>
                                    <li>
                                        <i class="bi bi-check2 text-success"></i>
                                        Use 24-hour time format (e.g., 09:00, 21:00)
                                    </li>
                                </ul>
                            </div>
                            <div class="col-md-6">
                                <ul class="helper-list">
                                    <li>
                                        <i class="bi bi-check2 text-success"></i>
                                        Add clear instructions for patients
                                    </li>
                                    <li>
                                        <i class="bi bi-check2 text-success"></i>
                                        Set realistic start and end dates
                                    </li>
                                    <li>
                                        <i class="bi bi-check2 text-success"></i>
                                        Patients will receive automatic Telegram reminders
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Common medications for suggestions
            const commonMedications = [
                'Ibuprofen', 'Paracetamol', 'Amoxicillin', 'Aspirin', 'Metformin',
                'Lisinopril', 'Atorvastatin', 'Omeprazole', 'Amlodipine', 'Simvastatin',
                'Levothyroxine', 'Azithromycin', 'Hydrochlorothiazide', 'Gabapentin', 'Sertraline'
            ];

            // Common time schedules
            const commonTimeSchedules = [
                { label: 'Once daily (Morning)', times: '09:00' },
                { label: 'Twice daily', times: '09:00, 21:00' },
                { label: 'Three times daily', times: '09:00, 14:00, 21:00' },
                { label: 'Four times daily', times: '08:00, 12:00, 16:00, 20:00' },
                { label: 'Before meals', times: '08:00, 13:00, 19:00' },
                { label: 'After meals', times: '09:00, 14:00, 20:00' }
            ];

            // Set today as minimum date for start date
            const startDateInput = document.getElementById('startDate');
            const endDateInput = document.getElementById('endDate');
            const today = new Date().toISOString().split('T')[0];
            startDateInput.min = today;

            // Update end date minimum when start date changes
            startDateInput.addEventListener('change', function() {
                const startDate = this.value;
                endDateInput.min = startDate;
                
                // Auto-suggest end date (7 days later for short-term, 30 days for long-term)
                if (startDate && !endDateInput.value) {
                    const start = new Date(startDate);
                    const end = new Date(start);
                    end.setDate(start.getDate() + 7); // Default to 7 days
                    endDateInput.value = end.toISOString().split('T')[0];
                }
            });

            // Medication name suggestions
            const nameInput = document.getElementById('name');
            const medicationSuggestions = document.getElementById('medicationSuggestions');

            nameInput.addEventListener('input', function() {
                const value = this.value.toLowerCase();
                if (value.length < 2) {
                    medicationSuggestions.style.display = 'none';
                    return;
                }

                const matches = commonMedications.filter(med => 
                    med.toLowerCase().includes(value)
                ).slice(0, 5);

                if (matches.length > 0) {
                    medicationSuggestions.innerHTML = matches.map(med => 
                        `<div class="medication-suggestion" data-medication="${med}">${med}</div>`
                    ).join('');
                    medicationSuggestions.style.display = 'block';
                } else {
                    medicationSuggestions.style.display = 'none';
                }
            });

            // Handle medication suggestion clicks
            medicationSuggestions.addEventListener('click', function(e) {
                if (e.target.classList.contains('medication-suggestion')) {
                    nameInput.value = e.target.dataset.medication;
                    medicationSuggestions.style.display = 'none';
                }
            });

            // Time suggestions
            const timesInput = document.getElementById('timesPerDay');
            const timeSuggestions = document.getElementById('timeSuggestions');

            timesInput.addEventListener('focus', function() {
                if (!this.value) {
                    timeSuggestions.innerHTML = commonTimeSchedules.map(schedule => 
                        `<div class="time-suggestion" data-times="${schedule.times}">
                            <strong>${schedule.label}</strong><br>
                            <small class="text-muted">${schedule.times}</small>
                        </div>`
                    ).join('');
                    timeSuggestions.style.display = 'block';
                }
            });

            // Handle time suggestion clicks
            timeSuggestions.addEventListener('click', function(e) {
                const suggestion = e.target.closest('.time-suggestion');
                if (suggestion) {
                    timesInput.value = suggestion.dataset.times;
                    timeSuggestions.style.display = 'none';
                }
            });

            // Hide suggestions when clicking outside
            document.addEventListener('click', function(e) {
                if (!nameInput.contains(e.target) && !medicationSuggestions.contains(e.target)) {
                    medicationSuggestions.style.display = 'none';
                }
                if (!timesInput.contains(e.target) && !timeSuggestions.contains(e.target)) {
                    timeSuggestions.style.display = 'none';
                }
            });

            // Auto-format times on blur
            timesInput.addEventListener('blur', function() {
                const times = this.value.split(',').map(time => time.trim());
                const formattedTimes = times.map(time => {
                    // Simple time format validation and correction
                    if (time.match(/^\d{1,2}:\d{2}$/)) {
                        const [hours, minutes] = time.split(':');
                        const formattedHours = hours.padStart(2, '0');
                        return `${formattedHours}:${minutes}`;
                    }
                    return time;
                });
                this.value = formattedTimes.join(', ');
            });

            // Form validation and enhancement
            const form = document.getElementById('prescriptionForm');
            const submitBtn = document.getElementById('submitBtn');
            
            // Add focus effects to form groups
            const formControls = document.querySelectorAll('.form-control, .form-select');
            formControls.forEach(control => {
                control.addEventListener('focus', function() {
                    this.closest('.form-group').classList.add('focused');
                });
                
                control.addEventListener('blur', function() {
                    this.closest('.form-group').classList.remove('focused');
                });
            });

            // Form submission with loading state
            form.addEventListener('submit', function(e) {
                // Add loading state to submit button
                submitBtn.classList.add('btn-loading');
                submitBtn.disabled = true;
                
                // Validate dates
                const startDate = startDateInput.value;
                const endDate = endDateInput.value;
                
                if (startDate && endDate && new Date(endDate) <= new Date(startDate)) {
                    e.preventDefault();
                    alert('End date must be after start date.');
                    submitBtn.classList.remove('btn-loading');
                    submitBtn.disabled = false;
                    return;
                }

                // Validate times format
                const timesValue = timesInput.value;
                const timePattern = /^(\d{1,2}:\d{2})(,\s*\d{1,2}:\d{2})*$/;
                if (!timePattern.test(timesValue)) {
                    e.preventDefault();
                    alert('Please enter times in correct format (e.g., 09:00, 14:00, 21:00)');
                    submitBtn.classList.remove('btn-loading');
                    submitBtn.disabled = false;
                    return;
                }
            });

            // Patient selection enhancement
            const patientSelect = document.getElementById('patientId');
            patientSelect.addEventListener('change', function() {
                if (this.value) {
                    this.style.borderColor = '#28a745';
                    this.style.backgroundColor = 'rgba(40, 167, 69, 0.1)';
                } else {
                    this.style.borderColor = '';
                    this.style.backgroundColor = '';
                }
            });

            // Instructions field enhancement with common suggestions
            const instructionsField = document.getElementById('instructions');
            const commonInstructions = [
                'Take with food',
                'Take on empty stomach',
                'Avoid alcohol',
                'Take with plenty of water',
                'Do not crush or chew',
                'Complete the full course'
            ];

            instructionsField.addEventListener('focus', function() {
                if (!this.value) {
                    this.placeholder = 'Common instructions: ' + commonInstructions.join(', ');
                }
            });

            instructionsField.addEventListener('blur', function() {
                this.placeholder = 'e.g., Take with food, Avoid alcohol, Take on empty stomach, etc.';
            });

            // Add smooth animations to form elements
            const animatedElements = document.querySelectorAll('.form-group');
            animatedElements.forEach((element, index) => {
                element.style.animationDelay = `${0.1 * index}s`;
                element.classList.add('animate-fade-in');
            });
        });
    </script>
</body>
</html>
